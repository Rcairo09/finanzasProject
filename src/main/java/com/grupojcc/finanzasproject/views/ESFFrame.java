/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package com.grupojcc.finanzasproject.views;

import java.awt.event.ItemEvent;
import java.util.Arrays;
import javax.swing.DefaultComboBoxModel;

/**
 *
 * @author Johnny
 */
public class ESFFrame extends javax.swing.JInternalFrame {

    /**
     * Creates new form ESFFrame
     */
    public ESFFrame() {
        initComponents();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        SubSubGroupItem = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        MontoTxt = new javax.swing.JTextField();
        groupCombo = new javax.swing.JComboBox<>();
        SubGroupCombo = new javax.swing.JComboBox<>();
        AccountCombo = new javax.swing.JComboBox<>();
        SubSubGroupCombo = new javax.swing.JComboBox<>();

        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Balance General");

        jLabel1.setText("Grupo");

        jLabel2.setText("Sub-grupo");

        SubSubGroupItem.setText("Sub-sub-grupo");

        jLabel4.setText("Cuenta");

        jLabel5.setText("Monto ");

        groupCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione", "Activo", "Pasivo", "Patrimonio" }));
        groupCombo.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                groupComboItemStateChanged(evt);
            }
        });

        SubGroupCombo.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                SubGroupComboItemStateChanged(evt);
            }
        });

        SubSubGroupCombo.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                SubSubGroupComboItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(groupCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(37, 37, 37)
                        .addComponent(jLabel2))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(MontoTxt)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(SubGroupCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25)
                .addComponent(SubSubGroupItem)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(SubSubGroupCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(AccountCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(145, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(SubSubGroupItem)
                    .addComponent(jLabel4)
                    .addComponent(groupCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SubGroupCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(AccountCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SubSubGroupCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(MontoTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(207, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void groupComboItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_groupComboItemStateChanged
        if(evt.getStateChange()==ItemEvent.SELECTED){
            if(this.groupCombo.getSelectedIndex()>0){
                this.SubGroupCombo.setModel(new DefaultComboBoxModel(this.subGroup(this.groupCombo.getSelectedItem().toString())));                        
                this.SubSubGroupCombo.setModel(new DefaultComboBoxModel(this.thirdGroup(this.groupCombo.getSelectedItem().toString())));
                    this.AccountCombo.setModel(new DefaultComboBoxModel(this.fourGroup(this.groupCombo.getSelectedItem().toString())));

            }
        }
    }//GEN-LAST:event_groupComboItemStateChanged

    private void SubGroupComboItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_SubGroupComboItemStateChanged
        if(evt.getStateChange()==ItemEvent.SELECTED){
            if(this.SubGroupCombo.getSelectedIndex()>0){
                this.AccountCombo.setModel(new DefaultComboBoxModel(this.thirdGroup(this.SubGroupCombo.getSelectedItem().toString())));
                    this.SubSubGroupCombo.setModel(new DefaultComboBoxModel(this.thirdGroup(this.SubGroupCombo.getSelectedItem().toString())));

                

            }
        }
    }//GEN-LAST:event_SubGroupComboItemStateChanged

    private void SubSubGroupComboItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_SubSubGroupComboItemStateChanged
        if(evt.getStateChange()==ItemEvent.SELECTED){
            if(this.SubSubGroupCombo.getSelectedIndex()>0){
                this.AccountCombo.setModel(new DefaultComboBoxModel(this.fourGroup(this.SubSubGroupCombo.getSelectedItem().toString())));


            }
        }
    }//GEN-LAST:event_SubSubGroupComboItemStateChanged

    
    
    public String[] subGroup(String subGroup)
    {
        
        this.SubSubGroupCombo.setEnabled(false);
        String[] group = new String[3];
        if(subGroup.equalsIgnoreCase("Activo"))
        {
            group[0] = "Seleccione";
            group[1] = "Activo circulante";
            group[2] = "Activo no circulante";
            
            
        }
        
        if(subGroup.equalsIgnoreCase("Pasivo"))
        {
            group[0] = "Seleccione";
            group[1] = "Pasivo circulante";
            group[2] = "Pasivo no circulante";
            
        }
        if(subGroup.equalsIgnoreCase("Patrimonio")){
        group[0] = "Seleccione";
        group[1] = "Capital Contribuido";
        group[2] = "Capital ganado";
        return group;
    }
        return group;
    }
    
    public String [] thirdGroup(String thirdGroup){
        this.AccountCombo.setEnabled(false);
         String subGroup [] = new String[10];
         if(thirdGroup.equalsIgnoreCase("Activo circulante")){
             this.SubSubGroupCombo.setEnabled(true);
             subGroup[0] = "Seleccione";
             subGroup[1] = "Disponible";
             subGroup[2] = "Realizable";
             subGroup = Arrays.stream(subGroup).filter(s -> (s != null && s.length() > 0))
                     .toArray(String[]::new);
             
             
             
         }
         if(thirdGroup.equalsIgnoreCase("Activo no circulante")){
             this.SubSubGroupCombo.setEnabled(true);
             subGroup [0] = "Seleccione";
             subGroup [1] = "Fijo";
             subGroup [2] = "Diferible";
             subGroup [3] = "Otros activos";
             subGroup = Arrays.stream(subGroup).filter(s -> (s != null && s.length() > 0))
                     .toArray(String[]::new);
         }
         
         
         if(thirdGroup.equalsIgnoreCase("Pasivo circulante")){
         this.SubSubGroupCombo.setEnabled(false);
         this.AccountCombo.setEnabled(true);
              subGroup [0] = "Seleccione";
              subGroup [1] = "Proveedores";
              subGroup [2] = "Documentos por pagar";
              subGroup [3] = "Acreedores diversos";
              subGroup [4] = "Dividendos por pagar";
              subGroup [5] = "IVA por pagar";
              subGroup [6] = "Impuestos sobre la renta por pagar";
              subGroup [7] = "Intereses por pagar";
              subGroup [8] = "Sueldos acumulados por pagar";
              subGroup [9] = "Gastos acumulados por pagar";
              subGroup = Arrays.stream(subGroup).filter(s -> (s != null && s.length() > 0))
                     .toArray(String[]::new);
                  
         }
         
         if(thirdGroup.equalsIgnoreCase("Pasivo no circulante")){
             this.SubSubGroupCombo.setEnabled(false);
             this.AccountCombo.setEnabled(true);
              subGroup [0] = "Seleccione";
              subGroup [1] = "Acreedores hipotecarios";
              subGroup [2] = "Documentos por pagar a largo plazo";
              subGroup [3] = "Obligaciones a circulación";
              subGroup [4] = "Bonos por pagar";
              subGroup [5] = "Rentas cobradas por anticipo";
              subGroup [6] = "Intereses cobrados por anticipo";
              subGroup = Arrays.stream(subGroup).filter(s -> (s != null && s.length() > 0))
                     .toArray(String[]::new);
             
         }
         
         if(thirdGroup.equalsIgnoreCase("Capital Contribuido")){
             this.SubSubGroupCombo.setEnabled(false);
             this.AccountCombo.setEnabled(true);
             subGroup [0] = "Seleccione";
             subGroup [1] = "Capital Social";
             subGroup [2] = "Aportaciones para futuro aumento de capital";
             subGroup [3] = "Prima en venta de acciones";
             subGroup [4] = "Donaciones";
             subGroup = Arrays.stream(subGroup).filter(s -> (s != null && s.length() > 0))
                     .toArray(String[]::new);
         
         }
         if(thirdGroup.equalsIgnoreCase("Capital ganado")){
             this.SubSubGroupCombo.setEnabled(false);
             this.AccountCombo.setEnabled(true);
             subGroup [0] = "Seleccione";
             subGroup [1] = "Utilidad del ejercicio";
             subGroup [2] = "Pérdida del ejercicio";
             subGroup [3] = "Utilidades retenidas";
             
             subGroup = Arrays.stream(subGroup).filter(s -> (s != null && s.length() > 0))
                     .toArray(String[]::new);
         
         }
         return subGroup;
    }
    
    String [] fourGroup(String fourGroup){
        String thirdGroup [] = new String[14];
        if(fourGroup.equalsIgnoreCase("Disponible")){
            this.AccountCombo.setEnabled(true);
            thirdGroup[0] = "Seleccione";
            thirdGroup[1] = "Caja general";
            thirdGroup[2] = "Fondo fijo de caja chica";
            thirdGroup[3] = "Fondo de oportunidades";
            thirdGroup[4] = "Bancos";
            thirdGroup[5] = "Inversiones temporales";
            thirdGroup = Arrays.stream(thirdGroup).filter(s -> (s != null && s.length() > 0))
                     .toArray(String[]::new);
        }
        if(fourGroup.equalsIgnoreCase("Realizable")){
            this.AccountCombo.setEnabled(true);
            thirdGroup[0] = "Seleccione";
            thirdGroup[1] = "Clientes";
            thirdGroup[2] = "Documentos por cobrar";
            thirdGroup[3] = "Deudores diversos";
            thirdGroup[4] = "Funcionarios y empleados";
            thirdGroup[5] = "Iva acreditable";
            thirdGroup[6] = "Inventarios";
            thirdGroup[7] = "Anticipo a proveedores";
            thirdGroup = Arrays.stream(thirdGroup).filter(s -> (s != null && s.length() > 0))
                     .toArray(String[]::new);
        }
        if(fourGroup.equalsIgnoreCase("Fijo")){
            this.AccountCombo.setEnabled(true);
            thirdGroup[0] = "Selecciones";
            thirdGroup[1] = "Terrenos";
            thirdGroup[2] = "Edificios";
            thirdGroup[3] = "Maquinaria";
            thirdGroup[4] = "Mobiliarios y equipo de oficina";
            thirdGroup[5] = "Muebles y enseres";
            thirdGroup[6] = "Equipo de transporte";
            thirdGroup[7] = "Equipo de entrega y reparto";
            thirdGroup = Arrays.stream(thirdGroup).filter(s -> (s != null && s.length() > 0))
                     .toArray(String[]::new);
        }
        if(fourGroup.equalsIgnoreCase("Diferible")){
            this.AccountCombo.setEnabled(true);
            thirdGroup[0] = "Selecciones";
            thirdGroup[1] = "Derechos de autor";
            thirdGroup[2] = "Patentes";
            thirdGroup[3] = "Marcas registradas";
            thirdGroup[4] = "Nombres comerciales";
            thirdGroup[5] = "Crédito comercial";
            thirdGroup[6] = "Gastos de constitución";
            thirdGroup[7] = "Gastos de organización";
            thirdGroup[8] = "Gastos de instalación";
            thirdGroup[9] = "Papelería y útiles de oficina";
            thirdGroup[10] = "Progaganda y publicidad";
            thirdGroup[11] = "Primas de seguros y fianzas";
            thirdGroup[12] = "Rentas pagadas por anticipo";
            thirdGroup[13] = "Impuesots pagados por anticipo";
            thirdGroup = Arrays.stream(thirdGroup).filter(s -> (s != null && s.length() > 0))
                     .toArray(String[]::new);
        }    
        if(fourGroup.equalsIgnoreCase("Otros activos")){
            this.AccountCombo.setEnabled(true);
            thirdGroup[0] = "Selecciones";
            thirdGroup[1] = "Fondo de amortización de obligaciones";
            thirdGroup[2] = "Depósito en garantía";
            thirdGroup[3] = "Inversiones en proceso";
            thirdGroup[4] = "Terrenos no utilizados";
            thirdGroup[5] = "Maquinaria no utilizada";
            thirdGroup = Arrays.stream(thirdGroup).filter(s -> (s != null && s.length() > 0))
                     .toArray(String[]::new);
        }
        
        return thirdGroup;
    }
    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JComboBox<String> AccountCombo;
    public javax.swing.JTextField MontoTxt;
    public javax.swing.JComboBox<String> SubGroupCombo;
    public javax.swing.JComboBox<String> SubSubGroupCombo;
    private javax.swing.JLabel SubSubGroupItem;
    public javax.swing.JComboBox<String> groupCombo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    // End of variables declaration//GEN-END:variables
}
